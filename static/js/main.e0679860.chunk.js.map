{"version":3,"sources":["utils/API.js","components/EmployeeTable.js","components/SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["API","getUsers","axios","get","EmployeeTable","props","className","scope","onClick","sort","employees","map","employee","i","src","picture","thumbnail","alt","name","first","last","email","cell","SearchBar","htmlFor","onChange","handleInputChange","type","placeholder","id","submit","App","state","items","loading","event","target","value","setState","handleFormSubmit","preventDefault","console","log","search","toLowerCase","filteredEmployees","filter","includes","handleSort","key","asc","employeeSorted","a","b","handleSort2","key2","handleRemove","then","response","data","results","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0679860.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API =  {\n  // Gets all users\n  getUsers: function() {\n    return axios.get(\"https://randomuser.me/api/?results=10\");\n  }\n};\nexport default API\n","import React from \"react\";\n\nfunction EmployeeTable(props) {\n    return(\n\n        <table className=\"table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Picture</th>\n      <th scope=\"col\"onClick= {props.sort}>First</th>\n      <th scope=\"col\"onClick= {props.sort}>Last</th>\n      <th scope=\"col\">Email</th>\n      <th scope=\"col\">Cell</th>\n    </tr>\n  </thead>\n  <tbody>\n      {props.employees.map((employee, i)=> (\n          <tr key={`employee -${i + 1}`}>\n              \n              <td>\n                  <img src={employee.picture.thumbnail} alt=\"profile\"/>\n              </td>\n              <td>{employee.name.first}</td>\n              <td>{employee.name.last}</td>\n              <td>{employee.email}</td>\n              <td>{employee.cell}</td>\n              {/* <td>{employee.id}</td> */}\n          </tr>\n      ))}\n \n  \n  </tbody>\n</table>\n    )\n}\n\nexport default EmployeeTable;","import React from \"react\";\n\nfunction SearchBar(props) {\n    return(\n        <form>\n        <div className=\"form-group\">\n          <label htmlFor=\"search\"></label>\n          <input\n            onChange={props.handleInputChange}\n            // value={props.search}\n            name=\"search\"\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search for Employees\"\n            id=\"search\"\n          />\n          <button onClick={props.submit} className=\"btn btn-primary mt-3\">\n            Search\n          </button>\n        </div>\n      </form>\n    );\n    \n}\n\nexport default SearchBar;","import React, { Component }  from \"react\";\nimport './App.css';\nimport API from \"./utils/API.js\";\nimport EmployeeTable from \"./components/EmployeeTable\";\nimport SearchBar from \"./components/SearchBar\";\nimport 'bootstrap/dist/css/bootstrap.css';\n//import './index.css';\n\n\nclass App extends Component {\n\n  // constructor(props){\n  //   super(props)\n    // this.state = {\n   state = {\n      items:[],\n      loading: false\n    }\n   \n\n   componentDidMount() {\n\n    // fetch(\"https://randomuser.me/api/\")\n    // .then((response) => response.json())\n    API.getUsers()\n    .then((response) => {\n      console.log(response.data.results);\n      this.setState({\n        items:response.data.results,\n        loading:true,\n        search: \"\"\n      })\n    })\n  }\n\n\n\n  handleInputChange = event => {\n    const name = event.target.name;\n    const value= event.target.value;\n    this.setState({\n      [name]: value\n    });\n  };\n\n    // When the form is submitted, search the Random API for `this.state.search`\n    handleFormSubmit = event => {\n      event.preventDefault();\n      console.log(this.state.search);\n      let search = this.state.search.toLowerCase();\n      //this.getUsers(this.state.search);\n      //console.log(this.state);\n      let filteredEmployees = this.state.items;\n      filteredEmployees = filteredEmployees.filter(employee => {\n        console.log(employee);\n        return (\n          employee.name.first\n          .toLowerCase()\n          .includes(search) ||\n          employee.name.last\n          .toLowerCase()\n          .includes(search) ||\n          employee.email \n          .toLowerCase()\n          .includes(search) ||\n          employee.cell\n          //.toLowerCase()\n          .includes(search)\n        )}\n      )\n      console.log(filteredEmployees);\n       \n     \n    };\n\n    handleSort = (key, asc) => {\n      // copy\n      let employeeSorted = [...this.state.items];\n      \n      // sort by key and asc\n      employeeSorted.sort( (a, b) => {\n        return a[key] > b[key] ? asc * 1 : asc * -1;\n      });\n  \n      // set the state\n      this.setState({ items: employeeSorted });\n    }\n\n    handleSort2 = (key, key2, asc) => {\n      // copy\n      let employeeSorted = [...this.state.items];\n      \n      // sort by key and asc\n      employeeSorted.sort( (a, b) => {\n        return a[key][key2] > b[key][key2] ? asc * 1 : asc * -1;\n      });\n  \n      // set the state\n      this.setState({ items: employeeSorted });\n    }\n\n    handleRemove = id => {\n      // console.log(this.state);\n      this.setState({\n        employees: this.state.employees.filter(employee=> employee.id !== id)\n      });\n    }\n  \n\n  render() {\n    let filteredEmployees = this.state.items;\n    if (this.state.search){\n\n  \n    let search = this.state.search.toLowerCase();\n   \n    filteredEmployees = filteredEmployees.filter(employee => {\n      //console.log(employee);\n      return (\n        employee.name.first\n        .toLowerCase()\n        .includes(search) ||\n        employee.name.last\n        .toLowerCase()\n        .includes(search) ||\n        employee.email \n        .toLowerCase()\n        .includes(search) ||\n        employee.cell\n        //.toLowerCase()\n        .includes(search)\n      )}\n    )}\n    //let {items, loading} = this.state\n    return (\n      <>\n      <div className=\"form-control\">Employee Directory</div>\n   \n      <button onClick={() => this.handleSort2(\"name\", \"first\", 1)}>Sort Alphabetically by First Name</button>\n      <button onClick={() => this.handleSort2(\"name\", \"last\", 1)}>Sort Alphabetically by Last Name</button>\n      {this.state.items.map}\n      <SearchBar search={this.state.search} submit= {this.handleFormSubmit} handleInputChange ={this.handleInputChange} handleSort={this.handleSort} />\n      <EmployeeTable search={this.state.search} employees = {filteredEmployees} handleRemove={this.handleRemove} handleSort={this.handleSort} />\n     \n      </>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}